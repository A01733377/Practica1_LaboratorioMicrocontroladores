%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/default/production/Main.o
udata RAM 1 60 60 3 1
code CODE 0 7F8E 7F8E 72 1
config CONFIG 4 300000 300000 E 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 63-7FF 1
SFR F60-FFF 1
BANK0 63-FF 1
BANK1 100-1FF 1
BANK2 200-2FF 1
BANK3 300-3FF 1
BANK4 400-4FF 1
BANK5 500-5FF 1
BANK6 600-6FF 1
BANK7 700-7FF 1
CONST 0-7F8D 1
IDLOC 200000-200007 1
SMALLCONST 800-7F8D 1
CODE 0-7F8D 1
BIGRAM 0-7FF 1
COMRAM 0-5F 1
EEDATA F00000-F000FF 1
MEDIUMCONST 800-7F8D 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/default/production/Main.o
7F8E code CODE >79:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7F8E code CODE >80:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7F92 code CODE >84:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7F94 code CODE >85:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7F96 code CODE >87:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7F98 code CODE >88:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7F9A code CODE >89:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7F9C code CODE >90:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7F9E code CODE >92:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FA0 code CODE >95:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FA4 code CODE >97:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FA6 code CODE >98:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FA8 code CODE >99:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FAA code CODE >101:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FAC code CODE >102:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FAE code CODE >103:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FB0 code CODE >104:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FB2 code CODE >105:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FB4 code CODE >106:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FB6 code CODE >107:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FB8 code CODE >109:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FBA code CODE >110:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FBC code CODE >111:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FBE code CODE >113:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FC0 code CODE >114:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FC2 code CODE >115:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FC4 code CODE >117:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FC6 code CODE >118:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FC8 code CODE >119:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FCA code CODE >121:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FCC code CODE >122:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FCE code CODE >123:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FD0 code CODE >125:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FD2 code CODE >126:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FD4 code CODE >127:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FD6 code CODE >129:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FD8 code CODE >132:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FDA code CODE >133:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FDC code CODE >134:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FE0 code CODE >137:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FE2 code CODE >138:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FE4 code CODE >139:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FE8 code CODE >142:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FEA code CODE >143:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FEC code CODE >144:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FF0 code CODE >147:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FF2 code CODE >148:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FF4 code CODE >149:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FF8 code CODE >152:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FFA code CODE >153:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
7FFC code CODE >154:C:\Users\Microcontroladores\Practica1_LabMicro.X\Practica1.X\Main.s
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 8000 0 ABS 0 - -
__Hspace_1 63 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 60000E 0 ABS 0 - -
__Hudata_bank0 0 0 ABS 0 udata_bank0 -
__Hudata_bank1 0 0 ABS 0 udata_bank1 -
__Hudata_bank2 0 0 ABS 0 udata_bank2 -
__Hudata_bank3 0 0 ABS 0 udata_bank3 -
__Hudata_bank4 0 0 ABS 0 udata_bank4 -
__Hudata_bank5 0 0 ABS 0 udata_bank5 -
__Hudata_bank6 0 0 ABS 0 udata_bank6 -
__Hudata_bank7 0 0 ABS 0 udata_bank7 -
isa$xinst 0 0 ABS 0 - build/default/production/Main.o
__Hedata 0 0 ABS 0 edata -
__Hudata 0 0 ABS 0 udata -
__Hconfig 30000E 0 CONFIG 4 config -
__Ledata 0 0 ABS 0 edata -
__Ludata 0 0 ABS 0 udata -
__Hcode 0 0 ABS 0 code -
__Hdata 0 0 ABS 0 data -
__Lcode 0 0 ABS 0 code -
__Ldata 0 0 ABS 0 data -
__S0 8000 0 ABS 0 - -
__S1 63 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Lconfig 0 0 CONFIG 4 config -
isa$std 1 0 ABS 0 - build/default/production/Main.o
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__Ludata_bank0 0 0 ABS 0 udata_bank0 -
__Ludata_bank1 0 0 ABS 0 udata_bank1 -
__Ludata_bank2 0 0 ABS 0 udata_bank2 -
__Ludata_bank3 0 0 ABS 0 udata_bank3 -
__Ludata_bank4 0 0 ABS 0 udata_bank4 -
__Ludata_bank5 0 0 ABS 0 udata_bank5 -
__Ludata_bank6 0 0 ABS 0 udata_bank6 -
__Ludata_bank7 0 0 ABS 0 udata_bank7 -
__Hudata_acs 0 0 ABS 0 udata_acs -
__Ludata_acs 0 0 ABS 0 udata_acs -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
udata 1 60 60 3 1
code 0 7F8E 7F8E 72 1
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
